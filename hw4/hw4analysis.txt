Analyzing your Code (15%)

definitions of all the variables used in this analysis:
n: Total number of commands.
m: Total number of individual variables or constants in a numeric expression. (For example in (1+1), m would be 2, and in (X+Y+Z), m would be 3.

1. 	θ(log(n))
	GOTO: implemented in line 61 in execution.cpp.
	GOSUB: implemented in line 70 in execution.cpp.
	IF: implemented in line 85 in execution.cpp.
	For all three operations, the high level approach was to use the line number parsed before as key find a particular element in a map where I stored all of my commands. I used map.find() function to figure which line of code should I go to. This takes θ(log(n)) time.

2. 	θ(log(n))
	RETURN: implemented in line 18 in execution.cpp.
	The high level approach I used was to fist find the top element in the stack where I stored all of the line numbers GOSUB is from. Then I used that line number as key to find a particular element in a map where I stored all of my commands. The function I used to find the origin line of GOSUB is stack.top() which takes O(1) time and the function I used to find the line of command was map.find(), which takes O(log(n)) time. Combine these two, the total time would be θ(log(n)).

3. 	Both take θ(1)
	My high level approach was to use the pointer that points to a variable object stored in a line of command and get its value or set its value. The get_value() function was used in line 28 in execution.cpp. It simply returns the value of the variable, which takes θ(1) time. The set_value() function was used in line 38 in execution.cpp. The set_value() function simply overwrites the value with the input integer, which takes θ(1) to complete.

4. 	Get value takes θ(1), set value takes θ(log(n)).
	My high level approach for get value was the same as the method I used for integer variables: Use the pointer that points to a variable object stored in a line of command and get its value. The get_value() function was used in line 28 in execution.cpp. It simply returns the value of the variable, which takes θ(1) time. My high level apporach for set value was first set the value for the variable object. Then I also updated the map that maps from name+index to variable values. This part was implemented in line 41-44 in execution.cpp. Setting the value for array variables (lin 41 in execution.cpp) takes the same amount of time as for integer variables, which was θ(1). Updating the map (line 42-44 in execution.cpp) takes θ(log(n)). Combine these two, the total time needed was θ(log(n)).